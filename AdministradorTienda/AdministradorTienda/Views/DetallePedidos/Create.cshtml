@model AdministradorTienda.Models.DetallePedido

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>DetallePedido</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <h4>Filtrar Productos</h4>
        <form method="get">
            <input type="hidden" name="idPedido" value="@ViewBag.IdPedidoPreseleccionado" />
            <div class="form-group">
                <label for="FiltroPor">Filtrar por:</label>
                <select name="FiltroPor" class="form-control">
                    <option value="">-- Seleccionar --</option>
                    <option value="Nombre">Nombre</option>
                    <option value="Categoria">Categoría</option>
                    <option value="Precio">Precio</option>
                </select>
            </div>
            <div class="form-group">
                <label for="ValorFiltro">Valor del filtro:</label>
                <input type="text" name="ValorFiltro" class="form-control" />
            </div>
            <div class="form-group">
                <label for="PrecioMin">Precio mínimo:</label>
                <input type="number" name="PrecioMin" class="form-control" step="0.01" />
            </div>
            <div class="form-group">
                <label for="PrecioMax">Precio máximo:</label>
                <input type="number" name="PrecioMax" class="form-control" step="0.01" />
            </div>
            <button type="submit" class="btn btn-info">Aplicar Filtro</button>
        </form>
        <form asp-action="Create">
            <div class="form-group">  
                           <label asp-for="IdPedido" class="control-label"></label>  
                           <select asp-for="IdPedido" class="form-control" asp-items="ViewBag.IdPedido" disabled="@(ViewBag.IdPedidoPreseleccionado != null ? "disabled" : null)"></select>  
                           @if (ViewBag.IdPedidoPreseleccionado != null)  
                           {  
                               <input type="hidden" name="IdPedido" value="@ViewBag.IdPedidoPreseleccionado" />  
                           }  
                       </div>
            <div class="form-group">
                <label asp-for="IdProducto" class="control-label"></label>
                <select asp-for="IdProducto" class="form-control" asp-items="ViewBag.IdProducto"></select>
            </div>
            <div class="form-group">
                <label asp-for="Cantidad" class="control-label"></label>
                <input asp-for="Cantidad" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="PrecioUnitario" class="control-label"></label>
                <input asp-for="PrecioUnitario" class="form-control" />
            </div>
            <button type="submit" class="btn btn-success">Guardar</button>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Obtener precios desde Razor (ViewBag -> JSON)
        const precios = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.ProductosConPrecio));

        document.addEventListener("DOMContentLoaded", function () {
            const selectProducto = document.querySelector('[name="IdProducto"]');
            const inputPrecioUnitario = document.querySelector('[name="PrecioUnitario"]');

            // Escuchar cambios en el select de productos
            selectProducto.addEventListener("change", function () {
                const selectedId = this.value;
                if (precios[selectedId]) {
                    inputPrecioUnitario.value = precios[selectedId].toFixed(2);
                } else {
                    inputPrecioUnitario.value = "";
                }
            });

            // Disparar el evento al cargar para precargar el precio si ya hay producto seleccionado
            selectProducto.dispatchEvent(new Event("change"));
        });
    </script>

}
